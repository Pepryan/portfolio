1:"$Sreact.fragment"
2:I[87555,[],""]
3:I[31295,[],""]
4:I[34584,["4345","static/chunks/app/not-found-8de2fa3959fb2621.js"],"default"]
6:I[59665,[],"MetadataBoundary"]
8:I[59665,[],"OutletBoundary"]
b:I[74911,[],"AsyncMetadataOutlet"]
d:I[59665,[],"ViewportBoundary"]
f:I[26614,[],""]
:HL["/portfolio/_next/static/css/4cbe397bac217cc6.css","style"]
0:{"P":null,"b":"m7OOawSu9-vIPxYJXy0dn","p":"/portfolio","c":["","blog","tags","nocode",""],"i":false,"f":[[["",{"children":["blog",{"children":["tags",{"children":[["tag","nocode","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/portfolio/_next/static/css/4cbe397bac217cc6.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"id","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta",null,{"httpEquiv":"refresh","content":"20;url=https://febryan.web.id"}],["$","link",null,{"rel":"icon","href":"/portfolio/favicon.ico","type":"image/x-icon"}]]}],["$","body",null,{"suppressHydrationWarning":true,"className":"bg-gray-900","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L4",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["tags",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["tag","nocode","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",["$","$L6",null,{"children":"$L7"}],null,["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","XnVG9hQCT1BG2j-Fey7t3",{"children":[["$","$Ld",null,{"children":"$Le"}],null]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[74911,[],"AsyncMetadata"]
13:I[51242,["844","static/chunks/ee560e2c-51bc697233b5ba3a.js","2995","static/chunks/2995-5c403de0dab796a9.js","792","static/chunks/app/blog/tags/%5Btag%5D/page-4f76ef590bd08436.js"],"default"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
14:T2d67,
# Tutorial: Deploy n8n Gratis di Google Cloud Platform (Always Free Tier)

## Pendahuluan

Setelah menggunakan GCP selama 12 bulan dengan $300 credit, sekarang saatnya memanfaatkan **Always Free Tier** untuk menjalankan n8n secara permanen tanpa biaya. Tutorial ini akan memandu Anda step-by-step untuk setup n8n menggunakan resource yang tersedia gratis selamanya di GCP.

## GCP Always Free Tier Specifications

### Compute Engine Always Free
- **Instance Type**: e2-micro 
- **vCPU**: 1 shared core
- **Memory**: 1 GB RAM
- **Storage**: 30 GB HDD persistent disk
- **Network**: 1 GB egress per bulan (ke luar region US)
- **Region**: Terbatas di US regions (us-west1, us-central1, us-east1)
- **Limitation**: Maksimal 1 instance per akun

### Additional Always Free Resources
- **Cloud Storage**: 5 GB regional storage
- **Cloud Functions**: 2 juta invocations per bulan
- **BigQuery**: 1 TB query per bulan
- **Cloud Build**: 120 build-minutes per hari

## Prerequisites

1. Akun Google Cloud yang sudah terverifikasi
2. Credit card untuk verifikasi (tidak akan dicharge untuk free tier)
3. Akses SSH (bisa pakai browser atau terminal)
4. Domain atau siap pakai IP public langsung

## Step 1: Setup Project dan Enable APIs

### 1.1 Create New Project
```bash
# Via gcloud CLI (optional)
gcloud projects create n8n-automation-project --name="n8n Automation"
gcloud config set project n8n-automation-project
```

**Via Console:**
1. Masuk ke [Google Cloud Console](https://console.cloud.google.com)
2. Klik dropdown project ‚Üí "New Project"
3. Nama project: `n8n-automation`
4. Klik "Create"

### 1.2 Enable Required APIs
```bash
gcloud services enable compute.googleapis.com
gcloud services enable cloudbuild.googleapis.com
```

**Via Console:**
1. Navigation menu ‚Üí APIs & Services ‚Üí Library
2. Search dan enable:
   - Compute Engine API
   - Cloud Resource Manager API

## Step 2: Create VM Instance (Always Free)

### 2.1 Instance Configuration

**Via Console (Recommended):**
1. Navigation menu ‚Üí Compute Engine ‚Üí VM instances
2. Klik "Create Instance"

**Instance Details:**
- **Name**: `n8n-server`
- **Region**: `us-central1` (Iowa) - Always Free eligible
- **Zone**: `us-central1-a`

**Machine Configuration:**
- **Machine family**: General-purpose
- **Series**: E2
- **Machine type**: `e2-micro` (1 vCPU, 1 GB memory) ‚ö†Ô∏è **Wajib untuk free tier**

**Boot Disk:**
- **Operating System**: Ubuntu
- **Version**: Ubuntu 20.04 LTS
- **Boot disk type**: Standard persistent disk
- **Size**: 30 GB (maksimal untuk free tier)

**Firewall:**
- ‚úÖ Allow HTTP traffic
- ‚úÖ Allow HTTPS traffic

### 2.2 Advanced Options

**Networking ‚Üí Network interfaces:**
- **External IPv4 address**: Ephemeral (kita akan upgrade ke static nanti)

**Security ‚Üí SSH Keys:**
- Tambahkan SSH public key jika punya
- Atau bisa pakai SSH browser nanti

### 2.3 Create Instance
Klik "Create" dan tunggu ~2-3 menit sampai instance running.

## Step 3: Setup Static IP (Optional tapi Recommended)

### 3.1 Reserve Static External IP
```bash
gcloud compute addresses create n8n-static-ip --region=us-central1
```

**Via Console:**
1. VPC network ‚Üí External IP addresses
2. Klik "Reserve Static Address"
3. Name: `n8n-static-ip`
4. Region: `us-central1`
5. Attach to: pilih instance `n8n-server`

**üí∞ Cost Note**: Static IP gratis selama attached ke running instance. Kena charge $0.01/jam jika instance di-stop.

## Step 4: Initial Server Setup

### 4.1 Connect via SSH
```bash
# Via gcloud CLI
gcloud compute ssh n8n-server --zone=us-central1-a

# Via browser: klik "SSH" di console VM instances
```

### 4.2 Update System
```bash
sudo apt update && sudo apt upgrade -y
```

### 4.3 Install Docker & Docker Compose
```bash
# Install Docker
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh

# Add user to docker group
sudo usermod -aG docker $USER

# Install Docker Compose
sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# Restart session untuk apply group changes
exit
```

Reconnect SSH setelah exit.

### 4.4 Verify Installation
```bash
docker --version
docker-compose --version
```

## Step 5: Deploy n8n dengan Docker Compose

### 5.1 Create Project Directory
```bash
mkdir ~/n8n-docker
cd ~/n8n-docker
```

### 5.2 Create Docker Compose File
```bash
nano docker-compose.yml
```

**docker-compose.yml content:**
```yaml
version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "80:5678"
    environment:
      - N8N_HOST=YOUR_DOMAIN_OR_IP
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://YOUR_DOMAIN_OR_IP
      - GENERIC_TIMEZONE=Asia/Jakarta
      - N8N_LOG_LEVEL=info
      - N8N_USER_FOLDER=/home/node/.n8n
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=ChangeThisPassword123!
    volumes:
      - n8n_data:/home/node/.n8n
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  n8n_data:
    driver: local
```

**Replace values:**
- `YOUR_DOMAIN_OR_IP`: Static IP atau domain Anda
- `N8N_BASIC_AUTH_PASSWORD`: Password yang kuat

### 5.3 Start n8n
```bash
docker-compose up -d
```

### 5.4 Check Status
```bash
docker-compose ps
docker-compose logs n8n
```

## Step 6: Configure Firewall Rules

### 6.1 Create Firewall Rule for n8n
```bash
gcloud compute firewall-rules create allow-n8n \
    --allow tcp:80,tcp:443 \
    --source-ranges 0.0.0.0/0 \
    --description "Allow HTTP and HTTPS for n8n"
```

**Via Console:**
1. VPC network ‚Üí Firewall
2. Create Firewall Rule:
   - Name: `allow-n8n`
   - Direction: Ingress
   - Targets: All instances in the network
   - Source IP ranges: `0.0.0.0/0`
   - Protocols and ports: TCP, ports 80, 443

## Step 7: Setup SSL dengan Let's Encrypt (Optional)

### 7.1 Install Certbot
```bash
sudo apt install certbot python3-certbot-nginx -y
```

### 7.2 Install Nginx
```bash
sudo apt install nginx -y
```

### 7.3 Configure Nginx
```bash
sudo nano /etc/nginx/sites-available/n8n
```

**Nginx config:**
```nginx
server {
    listen 80;
    server_name your-domain.com;

    location / {
        proxy_pass http://localhost:5678;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
```

### 7.4 Enable Site & Get SSL
```bash
sudo ln -s /etc/nginx/sites-available/n8n /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx

# Get SSL certificate
sudo certbot --nginx -d your-domain.com
```

## Step 8: Monitoring Resource Usage

### 8.1 Setup Monitoring Script
```bash
nano ~/monitor-resources.sh
```

**monitor-resources.sh:**
```bash
#!/bin/bash
echo "=== System Resources ==="
echo "CPU Usage:"
top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4"%"}'

echo "Memory Usage:"
free -h | awk '/^Mem:/ {print $3 "/" $2 " (" int($3/$2 * 100) "%)"}'

echo "Disk Usage:"
df -h / | awk 'NR==2 {print $3 "/" $2 " (" $5 ")"}'

echo "Docker Containers:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

echo "n8n Logs (last 10 lines):"
docker-compose -f ~/n8n-docker/docker-compose.yml logs --tail=10 n8n
```

```bash
chmod +x ~/monitor-resources.sh
```

### 8.2 Create Cron Job untuk Auto-monitoring
```bash
crontab -e
```

**Add line:**
```bash
# Monitor resources every hour
0 * * * * ~/monitor-resources.sh >> ~/resource-monitor.log 2>&1
```

## Step 9: Optimization untuk Free Tier

### 9.1 Reduce Memory Usage
**Update docker-compose.yml dengan memory limits:**
```yaml
services:
  n8n:
    # ... existing config
    deploy:
      resources:
        limits:
          memory: 800M
        reservations:
          memory: 400M
```

### 9.2 Setup Swap (Recommended untuk 1GB RAM)
```bash
sudo fallocate -l 1G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile

# Make permanent
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
```

### 9.3 Cleanup Script
```bash
nano ~/cleanup.sh
```

**cleanup.sh:**
```bash
#!/bin/bash
# Docker cleanup
docker system prune -f
docker volume prune -f

# System cleanup
sudo apt autoremove -y
sudo apt autoclean

# Clear logs older than 7 days
sudo journalctl --vacuum-time=7d

echo "Cleanup completed!"
```

```bash
chmod +x ~/cleanup.sh
```

**Schedule weekly cleanup:**
```bash
crontab -e
# Add:
0 2 * * 0 ~/cleanup.sh >> ~/cleanup.log 2>&1
```

## Step 10: Backup Strategy

### 10.1 Backup n8n Data
```bash
nano ~/backup-n8n.sh
```

**backup-n8n.sh:**
```bash
#!/bin/bash
BACKUP_DIR="$HOME/n8n-backups"
DATE=$(date +%Y%m%d_%H%M%S)

mkdir -p $BACKUP_DIR

# Stop n8n
cd ~/n8n-docker
docker-compose stop n8n

# Create backup
sudo tar -czf $BACKUP_DIR/n8n-backup-$DATE.tar.gz -C /var/lib/docker/volumes n8n-docker_n8n_data

# Start n8n
docker-compose start n8n

# Keep only last 5 backups
cd $BACKUP_DIR
ls -t n8n-backup-*.tar.gz | tail -n +6 | xargs -r rm

echo "Backup completed: n8n-backup-$DATE.tar.gz"
```

```bash
chmod +x ~/backup-n8n.sh
```

**Schedule daily backup:**
```bash
crontab -e
# Add:
0 3 * * * ~/backup-n8n.sh >> ~/backup.log 2>&1
```

## Step 11: Access n8n

1. Buka browser ke `http://YOUR_STATIC_IP` atau `https://your-domain.com`
2. Login dengan:
   - Username: `admin`
   - Password: yang Anda set di docker-compose.yml
3. Mulai buat workflow pertama!

## Troubleshooting

### Common Issues:

**1. Out of Memory:**
```bash
# Check memory usage
free -h
# Add more swap or optimize workflows

# Restart n8n if needed
cd ~/n8n-docker
docker-compose restart n8n
```

**2. Disk Space Full:**
```bash
# Check disk usage
df -h
# Run cleanup script
~/cleanup.sh
```

**3. Instance Stopped Unexpectedly:**
```bash
# Check instance status
gcloud compute instances list
# Start instance
gcloud compute instances start n8n-server --zone=us-central1-a
```

**4. n8n Container Keeps Restarting:**
```bash
# Check logs
docker-compose logs n8n
# Common fix: reduce memory limit or add swap
```

## Tips Agar Tetap Gratis

1. **Monitor Usage**: Set billing alerts di GCP console
2. **Single Instance**: Hanya jalankan 1 e2-micro instance
3. **Regional Limit**: Gunakan hanya US regions
4. **Network Usage**: Monitor egress ke luar US (limit 1GB/bulan)
5. **Stop When Not Needed**: Stop instance jika tidak dipakai lama
6. **Regular Cleanup**: Jalankan cleanup script mingguan

## Performance Expectations

Dengan spek e2-micro (1 vCPU, 1GB RAM):
- **Workflow concurrent**: 2-3 workflows ringan
- **Response time**: 2-5 detik untuk workflow sederhana
- **Uptime**: 99%+ dengan monitoring yang baik
- **Suitable for**: Personal automation, small team workflows

## Kesimpulan

Setup ini memberikan Anda n8n automation server yang berjalan **gratis selamanya** di GCP Always Free Tier. Dengan monitoring dan optimization yang tepat, server ini bisa handle automation tasks personal atau small team dengan baik.

Total biaya bulanan: **$0** (selama tetap dalam free tier limits)

## Next Steps

1. Explore n8n workflows di [n8n.io/workflows](https://n8n.io/workflows)
2. Setup webhook integrations
3. Connect dengan services yang sering Anda gunakan
4. Otomatisasi repetitive tasks sehari-hari

---

*Tutorial ini berdasarkan pengalaman real deployment dan testing di GCP Always Free Tier. Update terakhir: Juni 2025*15:Tf91,Capek nyatet pengeluaran manual? Sekarang bisa otomatis cuma lewat chat Telegram! Kombinasi **n8n**, **Notion**, dan **Google Gemini AI**, kita bisa bikin sistem yang:

- Nerima teks/foto struk/screenshot via bot Telegram  
- AI ekstrak info penting (jumlah, kategori, dll)  
- Data langsung masuk ke database Notion  
- Bisa rekap pengeluaran otomatis  

Bayangin, kita cuma perlu kirim pesan "Beli kopi 25rb" atau foto struk belanja, dan semua data langsung tercatat rapi! ‚ú®

## Apa Itu n8n dan kenapa powerful banget? üöÄ

Cerita dikit tentang n8n. Ini tuh platform otomatisasi workflow yang powerful banget! Kita bisa menghubungkan berbagai aplikasi dan layanan tanpa perlu jago coding. üíª

Kelebihan n8n: üòç
- **Open Source dan Gratis** ‚úÖ: Bisa di-deploy sendiri, gak perlu bayar subscription
- **No-Code/Low-Code** üß©: Cukup paham logika input-proses-output, drag and drop aja
- **Integrasi Banyak Platform** üîÑ: Dari Notion, Google Sheets, Telegram, sampai AI tools, 500+ integrasi aplikasi
- **Fleksibel Banget** üõ†Ô∏è: Bisa bikin workflow sesimple atau sekompleks yang kita mau

Yang penting paham flow datanya: input ‚Üí proses ‚Üí output. Gak perlu jago coding sama sekali! üôå (minimal paham logic dan parsing data)

Semua bisa kita buat tanpa coding rumit. Cuma drag-and-drop di n8n dan paham alur data aja. Simpel, fleksibel, powerful.

## Cara Bikinnya üõ†Ô∏è
Kalau tertarik bikin juga, ini yang dibutuhkan:

1. **Internal Integration Secret Notion** üîë - Didapatkan dari [https://www.notion.so/profile/integrations](https://www.notion.so/profile/integrations)
2. **API Google Gemini AI** ü§ñ - Didapatkan dari [https://aistudio.google.com/apikey](https://aistudio.google.com/apikey)
3. **API Bot Telegram** üí¨ - Dibuat melalui BotFather di Telegram
4. **Template Notion** üìã - Duplikat dari [template ini](https://battle-option-f5f.notion.site/200241ec407a80b4818ad5a1052d2b3d?v=200241ec407a81358320000cf264c9ae)

## Template n8n üëá
Awalnya pakai template yang cuma bisa kirim image, tapi kemudian diimprove supaya bisa nerima berbagai jenis input termasuk teks biasa üîÑ

- Template base (thanks to Rizqi Pratama Ramadhani): [Finance Tracker Template](https://n8n.io/workflows/3960-automated-financial-tracker-telegram-invoices-to-notion-with-gemini-ai-reports/)
- Template yang saya improve: [Finance Tracker Template-improved](
https://drive.google.com/file/d/1tXEibyZChlPpIT8cK2rTpw3sY8D9msgq/view?usp=sharing
)

![Template n8n](/portfolio/images/template-n8n.png)

## Tutorial singkat üìù
- Siapin server n8n (deploy bisa pake docker atau langsung di server pake npm) bisa liat [di sini](https://twnb.nbtrisna.my.id/n8n-docker-install/) atau dokumentasi officialnya [di sini](https://docs.n8n.io/hosting/)


- Buat credential Notion, Google Gemini AI, dan Telegram Bot di n8n
![buat cred](/portfolio/images/buat-cred1.png)

- Isi API Notion, Google Gemini AI, dan Telegram Bot
- Import template bisa drag and drop atau import dari file JSON
- Duplikat template Notion di Notion ([template ini](https://battle-option-f5f.notion.site/200241ec407a80b4818ad5a1052d2b3d?v=200241ec407a81358320000cf264c9ae))

- Sesuaikan tiap node dengan meng-konekkan Credential Notion, Google Gemini AI, dan Telegram Bot yang sudah dibuat
![node detail](/portfolio/images/node-detail.png)

- Set active workflow

## Hasilnya üëÄ
![hasil tele 1](/portfolio/images/hasil1.png)
![hasil tele 2](/portfolio/images/hasil2.png)
![hasil notion](/portfolio/images/hasil-notion.png)

## Next yang bisa diimproveüöÄ
- Bikin inputan voice message
- Bikin report yang lebih detail
- Bikin fitur untuk update, delete atau nyari data
- Insights dari AI

## Kesimpulan üéØ

Buat kita yang gak pengen capek sama manual, automation ini bisa jadi game-changer! üéÆ Yang keren, gak perlu jago coding buat bikin ini. Cukup paham logika dasar aja.

Dengan n8n, dan AI, tracking keuangan jadi semudah kirim chat. Gak ada lagi alasan buat gak ngatur keuangan dengan baik! üí™
5:["$","$L13",null,{"tag":"nocode","posts":[{"slug":"deploy-n8n-gratis-di-google-cloud","content":"$14","title":"Tutorial: Deploy n8n Gratis di Google Cloud Platform (Always Free Tier)","date":"2025-06-01","updated":"2025-06-01","tags":["n8n","automation","gcp","google-cloud","free-tier","deployment","tutorial","workflow","nocode","devops"],"draft":false,"summary":"Panduan lengkap deploy n8n automation platform secara gratis menggunakan Google Cloud Platform Always Free Tier. Setup permanent tanpa biaya dengan resource gratis selamanya.","author":"Febryan","category":"Tutorial","difficulty":"Intermediate","keywords":["n8n deployment","google cloud free tier","automation platform","workflow automation","free hosting","gcp tutorial","n8n tutorial","cloud deployment"],"openGraph":{"title":"Deploy n8n Gratis di Google Cloud Platform - Tutorial Lengkap","description":"Pelajari cara deploy n8n automation platform secara gratis menggunakan GCP Always Free Tier. Panduan step-by-step dengan resource gratis selamanya.","image":"/portfolio/images/n8n-gcp-deployment.png","url":"https://pepryan.github.io/portfolio/blog/deploy-n8n-gratis-di-google-cloud"},"twitter":{"card":"summary_large_image","title":"Deploy n8n Gratis di Google Cloud Platform - Tutorial Lengkap","description":"Panduan lengkap deploy n8n automation platform secara gratis menggunakan GCP Always Free Tier. Setup permanent tanpa biaya!"},"schema":{"type":"TechArticle","headline":"Tutorial: Deploy n8n Gratis di Google Cloud Platform (Always Free Tier)","description":"Panduan lengkap deploy n8n automation platform secara gratis menggunakan Google Cloud Platform Always Free Tier dengan resource gratis selamanya.","author":{"name":"Febryan","url":"https://pepryan.github.io/portfolio"},"datePublished":"2025-06-01","dateModified":"2025-06-01","publisher":{"name":"Febryan Portfolio","url":"https://pepryan.github.io/portfolio"}},"wordCount":1574,"readingTime":8},{"slug":"automated-finance-tracker-with-ai","content":"$15","title":"Bikin Finance Tracker Otomatis Pakai AI? Gampang Banget! ü§ñüí∞ Pakai Telegram, n8n, Gemini AI, Notion","date":"2025-05-27","updated":"2025-05-28","tags":["automation","finance","n8n","notion","ai","telegram","nocode","lowcode","gemini"],"draft":false,"summary":"Capek nyatet pengeluaran manual? Coba bikin finance tracker otomatis pakai n8n, Notion, dan AI. Tinggal chat ke bot Telegram, semua data dirangkum AI dan langsung tercatat rapi di Notion! ‚ú®","thumbnail":"/portfolio/images/template-n8n.png","author":"Febryan","category":"Tutorial","difficulty":"Intermediate","keywords":["finance tracker","automation","telegram bot","n8n workflow","notion database","ai integration","gemini ai","expense tracking","personal finance"],"openGraph":{"title":"Finance Tracker Otomatis dengan AI - Tutorial Lengkap","description":"Buat sistem finance tracker otomatis menggunakan Telegram Bot, n8n, Notion, dan Google Gemini AI. Catat pengeluaran jadi super mudah!","image":"/portfolio/images/template-n8n.png","url":"https://pepryan.github.io/portfolio/blog/automated-finance-tracker-with-ai"},"twitter":{"card":"summary_large_image","title":"Finance Tracker Otomatis dengan AI ü§ñüí∞","description":"Tutorial bikin finance tracker otomatis pakai Telegram, n8n, Notion & AI. Tinggal chat, data langsung tercatat rapi!","image":"/portfolio/images/template-n8n.png"},"schema":{"type":"HowTo","headline":"Bikin Finance Tracker Otomatis Pakai AI? Gampang Banget!","description":"Panduan lengkap membuat sistem finance tracker otomatis menggunakan Telegram Bot, n8n workflow automation, Notion database, dan Google Gemini AI untuk tracking pengeluaran yang efisien.","author":{"name":"Febryan","url":"https://pepryan.github.io/portfolio"},"datePublished":"2025-05-27","dateModified":"2025-05-28","publisher":{"name":"Febryan Portfolio","url":"https://pepryan.github.io/portfolio"}},"wordCount":486,"readingTime":3}]}]
a:null
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
12:{"metadata":[["$","title","0",{"children":"Posts tagged \"nocode\" | Febryan Blog"}],["$","meta","1",{"name":"description","content":"Explore 2 posts about nocode. Discover insights, tutorials, and thoughts on nocode topics by Febryan Ramadhan."}],["$","link","2",{"rel":"author","href":"https://pepryan.github.io/portfolio"}],["$","meta","3",{"name":"author","content":"Febryan Ramadhan"}],["$","meta","4",{"name":"keywords","content":"nocode,blog,posts,tutorial,programming,technology,febryan portfolio"}],["$","meta","5",{"name":"creator","content":"Febryan Ramadhan"}],["$","meta","6",{"name":"publisher","content":"Febryan Portfolio"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","9",{"name":"category","content":"Technology"}],["$","meta","10",{"name":"twitter:domain","content":"pepryan.github.io"}],["$","meta","11",{"name":"twitter:url","content":"https://pepryan.github.io/portfolio/blog/tags/nocode"}],["$","meta","12",{"name":"article:section","content":"Technology"}],["$","meta","13",{"name":"tag:post_count","content":"2"}],["$","link","14",{"rel":"canonical","href":"https://pepryan.github.io/portfolio/blog/tags/nocode/"}],["$","meta","15",{"property":"og:title","content":"Posts tagged \"nocode\" | Febryan Blog"}],["$","meta","16",{"property":"og:description","content":"Explore 2 posts about nocode. Discover insights, tutorials, and thoughts on nocode topics by Febryan Ramadhan."}],["$","meta","17",{"property":"og:url","content":"https://pepryan.github.io/portfolio/blog/tags/nocode/"}],["$","meta","18",{"property":"og:site_name","content":"Febryan Portfolio"}],["$","meta","19",{"property":"og:locale","content":"id_ID"}],["$","meta","20",{"property":"og:image","content":"https://pepryan.github.io/portfolio/images/default-og-image.png"}],["$","meta","21",{"property":"og:image:width","content":"1200"}],["$","meta","22",{"property":"og:image:height","content":"630"}],["$","meta","23",{"property":"og:image:alt","content":"Posts tagged with nocode - Febryan Portfolio"}],["$","meta","24",{"property":"og:type","content":"website"}],["$","meta","25",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","26",{"name":"twitter:site","content":"@pepryan"}],["$","meta","27",{"name":"twitter:creator","content":"@pepryan"}],["$","meta","28",{"name":"twitter:title","content":"Posts tagged \"nocode\" | Febryan Blog"}],["$","meta","29",{"name":"twitter:description","content":"Explore 2 posts about nocode. Discover insights, tutorials, and thoughts on nocode topics by Febryan Ramadhan."}],["$","meta","30",{"name":"twitter:image","content":"https://pepryan.github.io/portfolio/images/default-og-image.png"}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
