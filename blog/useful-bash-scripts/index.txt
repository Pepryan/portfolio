2:"$Sreact.fragment"
3:I[6931,["844","static/chunks/ee560e2c-b395463f5da0e521.js","177","static/chunks/app/layout-9a1b5f3ee7f8751b.js"],"ThemeProvider"]
4:I[8388,["844","static/chunks/ee560e2c-b395463f5da0e521.js","177","static/chunks/app/layout-9a1b5f3ee7f8751b.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
8:I[6213,[],"OutletBoundary"]
a:I[6213,[],"MetadataBoundary"]
c:I[6213,[],"ViewportBoundary"]
e:I[4835,[],""]
1:HL["/portfolio/_next/static/css/9cbba50295c74a15.css","style"]
0:{"P":null,"b":"n-U_-22hKsRsXqBSMrQM-","p":"/portfolio","c":["","blog","useful-bash-scripts",""],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","useful-bash-scripts","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$2","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/portfolio/_next/static/css/9cbba50295c74a15.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"suppressHydrationWarning":true,"className":"bg-white dark:bg-neutral-900","children":["$","$L3",null,{"children":["$","$L4",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]}]]}]]}],{"children":["blog",["$","$2","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["slug","useful-bash-scripts","d"],["$","$2","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$2","c",{"children":["$L7",null,["$","$L8",null,{"children":"$L9"}]]}],{},null]},null]},null]},null],["$","$2","h",{"children":[null,["$","$2","tnxTA_m1iBvh9_Ye6R8g0",{"children":[["$","$La",null,{"children":"$Lb"}],["$","$Lc",null,{"children":"$Ld"}],null]}]]}]]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:I[2813,["844","static/chunks/ee560e2c-b395463f5da0e521.js","446","static/chunks/53c13509-6ce59f6d1b2fed79.js","234","static/chunks/234-d4d59589f0f93f8b.js","96","static/chunks/96-8ce2979d077cfd91.js","565","static/chunks/565-18f0eb7054b970ae.js","953","static/chunks/app/blog/%5Bslug%5D/page-652b9b9057ff505e.js"],"default",1]
10:T7f25,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    blockquote: "blockquote",
    code: "code",
    em: "em",
    figure: "figure",
    h1: "h1",
    h2: "h2",
    li: "li",
    p: "p",
    pre: "pre",
    span: "span",
    strong: "strong",
    ul: "ul",
    ..._provideComponents(),
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "Useful Bash Scripts for DevOps"
    }), "\n", _jsx(_components.p, {
      children: "Here are some useful Bash scripts that I frequently use in my daily DevOps tasks."
    }), "\n", _jsx(_components.h2, {
      children: "1. System Resource Monitor"
    }), "\n", _jsx(_components.p, {
      children: "This script monitors CPU, Memory, and Disk usage:"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#011627",
          color: "#d6deeb"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "night-owl",
        children: _jsxs(_components.code, {
          "data-language": "bash",
          "data-theme": "night-owl",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "#!/bin/bash"
            })
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "echo"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " System"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " Resource"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " Monitor"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "echo"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "CPU Usage:"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "top"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -bn1"
            }), _jsx(_components.span, {
              style: {
                color: "#7FDBCA"
              },
              children: " |"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: " grep"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "Cpu(s)"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#7FDBCA"
              },
              children: " |"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: " sed"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "s/.,[0−9.]∗[0−9.]∗% id./\\1/"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#7FDBCA"
              },
              children: " |"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: " awk"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " '"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "{print 100 - $1}"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "'"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "%"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "echo"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "Memory Usage:"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "free"
            }), _jsx(_components.span, {
              style: {
                color: "#7FDBCA"
              },
              children: " |"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: " grep"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " Mem"
            }), _jsx(_components.span, {
              style: {
                color: "#7FDBCA"
              },
              children: " |"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: " awk"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " '"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "{print $3/$2 100.0}"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "'"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "%"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "echo"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "Disk Usage:"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "df"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -h"
            }), _jsx(_components.span, {
              style: {
                color: "#7FDBCA"
              },
              children: " |"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: " awk"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " '"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "$NF==\"/\"{print $5}"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "'"
            })]
          })]
        })
      })
    }), "\n", _jsx(_components.h2, {
      children: "Test Python Code"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#011627",
          color: "#d6deeb"
        },
        tabIndex: "0",
        "data-language": "python",
        "data-theme": "night-owl",
        children: _jsx(_components.code, {
          "data-language": "python",
          "data-theme": "night-owl",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "print"
            }), _jsx(_components.span, {
              style: {
                color: "#D6DEEB"
              },
              children: "("
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "hello-world"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#D6DEEB"
              },
              children: ")"
            })]
          })
        })
      })
    }), "\n", _jsx(_components.h2, {
      children: "Plain Text Example"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#011627",
          color: "#d6deeb"
        },
        tabIndex: "0",
        "data-language": "text",
        "data-theme": "night-owl",
        children: _jsx(_components.code, {
          "data-language": "text",
          "data-theme": "night-owl",
          style: {
            display: "grid"
          },
          children: _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "test"
            })
          })
        })
      })
    }), "\n", _jsx(_components.h2, {
      children: "2. Backup Script"
    }), "\n", _jsx(_components.p, {
      children: "This script creates a backup of a specified directory:"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#011627",
          color: "#d6deeb"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "night-owl",
        children: _jsxs(_components.code, {
          "data-language": "bash",
          "data-theme": "night-owl",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "#!/bin/bash"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "# Backup Script"
            })
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "SOURCE"
            }), _jsx(_components.span, {
              style: {
                color: "#C792EA"
              },
              children: "="
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "/path/to/source"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "DESTINATION"
            }), _jsx(_components.span, {
              style: {
                color: "#C792EA"
              },
              children: "="
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "/path/to/backup"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "TIMESTAMP"
            }), _jsx(_components.span, {
              style: {
                color: "#C792EA"
              },
              children: "="
            }), _jsx(_components.span, {
              style: {
                color: "#D6DEEB"
              },
              children: "$("
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "date"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " +"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "%Y%m%d%H%M"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#D6DEEB"
              },
              children: ")"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "BACKUP_FILE"
            }), _jsx(_components.span, {
              style: {
                color: "#C792EA"
              },
              children: "="
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "$DESTINATION"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "/backup-"
            }), _jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "$TIMESTAMP"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: ".tar.gz"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: " "
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "tar"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -czf"
            }), _jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: " $BACKUP_FILE"
            }), _jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: " $SOURCE"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "echo"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "Backup created at "
            }), _jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "$BACKUP_FILE"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          })]
        })
      })
    }), "\n", _jsx(_components.h2, {
      children: "3. Log Cleanup"
    }), "\n", _jsx(_components.p, {
      children: "This script cleans up old log files:"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#011627",
          color: "#d6deeb"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "night-owl",
        children: _jsxs(_components.code, {
          "data-language": "bash",
          "data-theme": "night-owl",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "#!/bin/bash"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "# Log Cleanup Script"
            })
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "find"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " /var/log"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -type"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " f"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -name"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "*.log"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -mtime"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " +30"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -exec"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " rm"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " {}"
            }), _jsx(_components.span, {
              style: {
                color: "#F78C6C"
              },
              children: " \\;"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "echo"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "Old log files deleted."
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          })]
        })
      })
    }), "\n", _jsx(_components.h2, {
      children: "4. User Management"
    }), "\n", _jsx(_components.p, {
      children: "This script adds a new user and sets a password:"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#011627",
          color: "#d6deeb"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "night-owl",
        children: _jsxs(_components.code, {
          "data-language": "bash",
          "data-theme": "night-owl",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "#!/bin/bash"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "# User Management Script"
            })
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "read"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -p"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "Enter username: "
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " USERNAME"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "sudo"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " adduser"
            }), _jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: " $USERNAME"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#C5E478",
                fontStyle: "italic"
              },
              children: "echo"
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: " \""
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: "User "
            }), _jsx(_components.span, {
              style: {
                color: "#C5E478"
              },
              children: "$USERNAME"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " added."
            }), _jsx(_components.span, {
              style: {
                color: "#D9F5DD"
              },
              children: "\""
            })]
          })]
        })
      })
    }), "\n", _jsx(_components.h2, {
      children: "5. Network Status Check"
    }), "\n", _jsx(_components.p, {
      children: "This script checks the network status:"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#011627",
          color: "#d6deeb"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "night-owl",
        children: _jsxs(_components.code, {
          "data-language": "bash",
          "data-theme": "night-owl",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "#!/bin/bash"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              style: {
                color: "#637777",
                fontStyle: "italic"
              },
              children: "# Network Status Check Script"
            })
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#82AAFF",
                fontStyle: "italic"
              },
              children: "ping"
            }), _jsx(_components.span, {
              style: {
                color: "#82AAFF"
              },
              children: " -c"
            }), _jsx(_components.span, {
              style: {
                color: "#F78C6C"
              },
              children: " 4"
            }), _jsx(_components.span, {
              style: {
                color: "#ECC48D"
              },
              children: " google.com"
            })]
          })]
        })
      })
    }), "\n", _jsx(_components.h2, {
      children: "Features of This Document"
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsxs(_components.li, {
        children: [_jsx(_components.strong, {
          children: "Code Blocks"
        }), ": ", _jsx(_components.span, {
          "data-rehype-pretty-code-figure": "",
          children: _jsx(_components.code, {
            "data-language": "plaintext",
            "data-theme": "night-owl",
            style: {
              backgroundColor: "#011627",
              color: "#d6deeb"
            },
            children: _jsx(_components.span, {
              "data-line": "",
              children: _jsx(_components.span, {
                children: "Shown above for various scripts."
              })
            })
          })
        })]
      }), "\n", _jsxs(_components.li, {
        children: [_jsx(_components.strong, {
          children: "Lists"
        }), ":", "\n", _jsxs(_components.ul, {
          children: ["\n", _jsx(_components.li, {
            children: "Item 1"
          }), "\n", _jsx(_components.li, {
            children: "Item 2"
          }), "\n", _jsx(_components.li, {
            children: "Item 3"
          }), "\n"]
        }), "\n"]
      }), "\n", _jsxs(_components.li, {
        children: [_jsx(_components.strong, {
          children: "Bold Text"
        }), ": Important commands are highlighted."]
      }), "\n", _jsxs(_components.li, {
        children: [_jsx(_components.em, {
          children: "Italic Text"
        }), ": Notes and comments are italicized."]
      }), "\n", _jsxs(_components.li, {
        children: [_jsx(_components.strong, {
          children: "Blockquotes"
        }), ":", "\n", _jsxs(_components.blockquote, {
          children: ["\n", _jsx(_components.p, {
            children: "This is a blockquote for important notes."
          }), "\n"]
        }), "\n"]
      }), "\n"]
    }), "\n", _jsx(_components.h2, {
      children: "Conclusion"
    }), "\n", _jsx(_components.p, {
      children: "These scripts can help automate various tasks in your DevOps workflow. Feel free to modify them according to your needs!"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
11:T76a,
# Useful Bash Scripts for DevOps

Here are some useful Bash scripts that I frequently use in my daily DevOps tasks.

## 1. System Resource Monitor

This script monitors CPU, Memory, and Disk usage: 

```bash
#!/bin/bash
echo System Resource Monitor
echo "CPU Usage:"
top -bn1 | grep "Cpu(s)" | sed "s/.,[0−9.]∗[0−9.]∗% id./\1/" | awk '{print 100 - $1}'%
echo "Memory Usage:"
free | grep Mem | awk '{print $3/$2 100.0}'%
echo "Disk Usage:"
df -h | awk '$NF=="/"{print $5}'
```

## Test Python Code

```python
print("hello-world")
```

## Plain Text Example

```text
test
```

## 2. Backup Script

This script creates a backup of a specified directory:

```bash
#!/bin/bash
# Backup Script
SOURCE="/path/to/source"
DESTINATION="/path/to/backup"
TIMESTAMP=$(date +"%Y%m%d%H%M")
BACKUP_FILE="$DESTINATION/backup-$TIMESTAMP.tar.gz"

tar -czf $BACKUP_FILE $SOURCE
echo "Backup created at $BACKUP_FILE"
```

## 3. Log Cleanup

This script cleans up old log files:

```bash
#!/bin/bash
# Log Cleanup Script
find /var/log -type f -name "*.log" -mtime +30 -exec rm {} \;
echo "Old log files deleted."
```

## 4. User Management

This script adds a new user and sets a password:

```bash
#!/bin/bash
# User Management Script
read -p "Enter username: " USERNAME
sudo adduser $USERNAME
echo "User $USERNAME added."
```

## 5. Network Status Check

This script checks the network status:

```bash
#!/bin/bash
# Network Status Check Script
ping -c 4 google.com
```

## Features of This Document

- **Code Blocks**: `Shown above for various scripts.`
- **Lists**: 
  - Item 1
  - Item 2
  - Item 3
- **Bold Text**: Important commands are highlighted.
- *Italic Text*: Notes and comments are italicized.
- **Blockquotes**: 
  > This is a blockquote for important notes.

## Conclusion

These scripts can help automate various tasks in your DevOps workflow. Feel free to modify them according to your needs!12:T76a,
# Useful Bash Scripts for DevOps

Here are some useful Bash scripts that I frequently use in my daily DevOps tasks.

## 1. System Resource Monitor

This script monitors CPU, Memory, and Disk usage: 

```bash
#!/bin/bash
echo System Resource Monitor
echo "CPU Usage:"
top -bn1 | grep "Cpu(s)" | sed "s/.,[0−9.]∗[0−9.]∗% id./\1/" | awk '{print 100 - $1}'%
echo "Memory Usage:"
free | grep Mem | awk '{print $3/$2 100.0}'%
echo "Disk Usage:"
df -h | awk '$NF=="/"{print $5}'
```

## Test Python Code

```python
print("hello-world")
```

## Plain Text Example

```text
test
```

## 2. Backup Script

This script creates a backup of a specified directory:

```bash
#!/bin/bash
# Backup Script
SOURCE="/path/to/source"
DESTINATION="/path/to/backup"
TIMESTAMP=$(date +"%Y%m%d%H%M")
BACKUP_FILE="$DESTINATION/backup-$TIMESTAMP.tar.gz"

tar -czf $BACKUP_FILE $SOURCE
echo "Backup created at $BACKUP_FILE"
```

## 3. Log Cleanup

This script cleans up old log files:

```bash
#!/bin/bash
# Log Cleanup Script
find /var/log -type f -name "*.log" -mtime +30 -exec rm {} \;
echo "Old log files deleted."
```

## 4. User Management

This script adds a new user and sets a password:

```bash
#!/bin/bash
# User Management Script
read -p "Enter username: " USERNAME
sudo adduser $USERNAME
echo "User $USERNAME added."
```

## 5. Network Status Check

This script checks the network status:

```bash
#!/bin/bash
# Network Status Check Script
ping -c 4 google.com
```

## Features of This Document

- **Code Blocks**: `Shown above for various scripts.`
- **Lists**: 
  - Item 1
  - Item 2
  - Item 3
- **Bold Text**: Important commands are highlighted.
- *Italic Text*: Notes and comments are italicized.
- **Blockquotes**: 
  > This is a blockquote for important notes.

## Conclusion

These scripts can help automate various tasks in your DevOps workflow. Feel free to modify them according to your needs!13:Tf4d,Capek nyatet pengeluaran manual? Sekarang bisa otomatis cuma lewat chat Telegram! Kombinasi **n8n**, **Notion**, dan **Google Gemini AI**, kita bisa bikin sistem yang:

- Nerima teks/foto struk/screenshot via bot Telegram  
- AI ekstrak info penting (jumlah, kategori, dll)  
- Data langsung masuk ke database Notion  
- Bisa rekap pengeluaran otomatis  

Bayangin, kita cuma perlu kirim pesan "Beli kopi 25rb" atau foto struk belanja, dan semua data langsung tercatat rapi! ✨

# Apa Itu n8n dan kenapa powerful banget? 🚀

Cerita dikit tentang n8n. Ini tuh platform otomatisasi workflow yang powerful banget! Kita bisa menghubungkan berbagai aplikasi dan layanan tanpa perlu jago coding. 💻

Kelebihan n8n: 😍
- **Open Source dan Gratis** ✅: Bisa di-deploy sendiri, gak perlu bayar subscription
- **No-Code/Low-Code** 🧩: Cukup paham logika input-proses-output, drag and drop aja
- **Integrasi Banyak Platform** 🔄: Dari Notion, Google Sheets, Telegram, sampai AI tools, 500+ integrasi aplikasi
- **Fleksibel Banget** 🛠️: Bisa bikin workflow sesimple atau sekompleks yang kita mau

Yang penting paham flow datanya: input → proses → output. Gak perlu jago coding sama sekali! 🙌 (minimal paham logic dan parsing data)

Semua bisa kita buat tanpa coding rumit. Cuma drag-and-drop di n8n dan paham alur data aja. Simpel, fleksibel, powerful.

# Cara Bikinnya 🛠️
Kalau tertarik bikin juga, ini yang dibutuhkan:

1. **Internal Integration Secret Notion** 🔑 - Didapatkan dari [https://www.notion.so/profile/integrations](https://www.notion.so/profile/integrations)
2. **API Google Gemini AI** 🤖 - Didapatkan dari [https://aistudio.google.com/apikey](https://aistudio.google.com/apikey)
3. **API Bot Telegram** 💬 - Dibuat melalui BotFather di Telegram
4. **Template Notion** 📋 - Duplikat dari [template ini](https://battle-option-f5f.notion.site/200241ec407a80b4818ad5a1052d2b3d?v=200241ec407a81358320000cf264c9ae)

## Template n8n 👇
Awalnya pakai template yang cuma bisa kirim image, tapi kemudian diimprove supaya bisa nerima berbagai jenis input termasuk teks biasa 🔄

- Template base (thanks to Rizqi Pratama Ramadhani): [Finance Tracker Template](https://n8n.io/workflows/3960-automated-financial-tracker-telegram-invoices-to-notion-with-gemini-ai-reports/)
- Template yang saya improve: [Finance Tracker Template-improved](
https://drive.google.com/file/d/1tXEibyZChlPpIT8cK2rTpw3sY8D9msgq/view?usp=sharing
)

![Template n8n](/portfolio/images/template-n8n.png)

### Tutorial singkat 📝
- Siapin server n8n (deploy bisa pake docker atau langsung di server pake npm) bisa liat dokumentasi officialnya [di sini](https://docs.n8n.io/hosting/)


- Buat credential Notion, Google Gemini AI, dan Telegram Bot di n8n
![buat cred](/portfolio/images/buat-cred1.png)

- Isi API Notion, Google Gemini AI, dan Telegram Bot
- Import template bisa drag and drop atau import dari file JSON
- Duplikat template Notion di Notion ([template ini](https://battle-option-f5f.notion.site/200241ec407a80b4818ad5a1052d2b3d?v=200241ec407a81358320000cf264c9ae))

- Sesuaikan tiap node dengan meng-konekkan Credential Notion, Google Gemini AI, dan Telegram Bot yang sudah dibuat
![node detail](/portfolio/images/node-detail.png)

- Set active workflow

# Hasilnya 👀
![hasil tele 1](/portfolio/images/hasil1.png)
![hasil tele 2](/portfolio/images/hasil2.png)
![hasil notion](/portfolio/images/hasil-notion.png)

# Next yang bisa diimprove🚀
- Bikin inputan voice message
- Bikin report yang lebih detail
- Bikin fitur untuk update, delete atau nyari data
- Insights dari AI

# Kesimpulan 🎯

Buat kita yang gak pengen capek sama manual, automation ini bisa jadi game-changer! 🎮 Yang keren, gak perlu jago coding buat bikin ini. Cukup paham logika dasar aja.

Dengan n8n, dan AI, tracking keuangan jadi semudah kirim chat. Gak ada lagi alasan buat gak ngatur keuangan dengan baik! 💪
14:T15c6,
**Artikel ini dihasilkan oleh ChatGPT.**

# Var, Let, dan Const: Rahasia Penting yang Wajib Dipahami Developer!

Tahukah kamu bahwa salah memilih cara deklarasi variabel bisa membuat kode kamu menjadi *buggy* dan sulit dipahami? Di dunia JavaScript, ada tiga cara utama untuk mendeklarasikan variabel: `var`, `let`, dan `const`. Ketiganya sering disalahgunakan oleh banyak developer, bahkan yang sudah berpengalaman sekalipun! Artikel ini akan membongkar perbedaan mendasar ketiga deklarasi ini dengan penjelasan lengkap dan contoh studi kasus.

---

## Apa Itu Var, Let, dan Const?

Sebelum masuk ke perbedaan, mari kita kenali satu per satu:

- **`var`**: Cara lama untuk mendeklarasikan variabel. Digunakan sebelum ES6 (2015).
- **`let`**: Alternatif modern untuk `var`, dirancang untuk memperbaiki kekurangan `var`.
- **`const`**: Mirip dengan `let`, tetapi digunakan untuk nilai yang tidak berubah.

---

## Perbedaan Utama (TL;DR)

| **Aspek**           | **var**                           | **let**                          | **const**                          |
|---------------------|-----------------------------------|-----------------------------------|------------------------------------|
| **Scope**           | Function scope                   | Block scope                      | Block scope                       |
| **Redeclaration**   | Bisa                             | Tidak bisa                       | Tidak bisa                        |
| **Reassignment**    | Bisa                             | Bisa                             | Tidak bisa                        |
| **Hoisting**        | Diangkat dengan nilai `undefined` | Diangkat tetapi tidak bisa digunakan sebelum deklarasi | Diangkat tetapi tidak bisa digunakan sebelum deklarasi |
| **Nilai Harus Diisi?** | Tidak                           | Tidak                            | Ya                                |

---

## Perbedaan Detail dengan Contoh

### 1. Scope (Ruang Lingkup)

- **`var`** hanya berlaku di dalam fungsi tempat ia dideklarasikan (function scope).
- **`let`** dan **`const`** hanya berlaku di dalam blok tempat mereka dideklarasikan (block scope).

**Contoh:**
```javascript showLineNumbers
if (true) {
    var x = 10;
    let y = 20;
    const z = 30;
}
console.log(x); // 10 (bisa diakses di luar blok if)
console.log(y); // Error! y tidak dikenal di luar blok if
console.log(z); // Error! z tidak dikenal di luar blok if
```

---

### 2. Redeclaration (Deklarasi Ulang)

- **`var`**: Bisa dideklarasikan ulang tanpa masalah (potensi konflik).
- **`let`** dan **`const`**: Tidak bisa dideklarasikan ulang di tempat yang sama (lebih aman).

**Contoh:**
```javascript
var a = 1;
var a = 2; // Tidak masalah (tetapi bisa membingungkan).

let b = 1;
// let b = 2; // Error! Tidak bisa dideklarasikan ulang.

const c = 1;
// const c = 2; // Error! Tidak bisa dideklarasikan ulang.
```

---

### 3. Reassignment (Mengubah Nilai)

- **`var` dan `let`**: Nilainya bisa diubah setelah dideklarasikan.
- **`const`**: Nilainya tidak bisa diubah.

**Contoh:**
```javascript
let name = "Ryan";
name = "Febryan"; // Oke, nilai diubah.

const age = 25;
// age = 26; // Error! Nilai tidak bisa diubah.
```

> **Catatan Penting**: Untuk objek dan array, `const` mengunci referensi, tetapi isi dalamnya tetap bisa diubah.

**Contoh:**
```javascript
const user = { name: "Ryan", age: 25 };
user.name = "Febryan"; // Oke, mengubah properti.

// Tapi:
// user = { name: "Uwi", age: 23 }; // Error! Tidak bisa mengganti objek.
```

---

### 4. Hoisting (Pengangkatan)

- **`var`**: Diangkat ke atas (hoisted) dengan nilai awal `undefined`.
- **`let` dan `const`**: Diangkat tetapi tidak bisa digunakan sebelum dideklarasikan (temporal dead zone).

**Contoh:**
```javascript
console.log(a); // undefined (var diangkat ke atas tetapi belum diisi nilai)
var a = 5;

// console.log(b); // Error! b tidak bisa digunakan sebelum deklarasi.
let b = 10;
```

---

## Kapan Harus Menggunakan Let atau Const?

1. **Gunakan `const` Sebisa Mungkin**
   - Jika nilai variabel tidak akan berubah, selalu gunakan `const`.

2. **Gunakan `let` Jika Nilai Akan Berubah**
   - Misalnya untuk nilai yang diperbarui dalam perulangan atau kondisi tertentu.

3. **Hindari `var`**
   - `var` hanya digunakan jika kamu bekerja dengan kode lama atau benar-benar perlu akses global dalam fungsi.

---

## Studi Kasus untuk Memperjelas

### Studi Kasus 1: Perulangan
Gunakan `let` agar setiap iterasi memiliki "kotak" sendiri.

**Contoh:**
```javascript
for (let i = 0; i < 3; i++) {
    setTimeout(() => console.log(i), 100);
}
// Output: 0, 1, 2

for (var i = 0; i < 3; i++) {
    setTimeout(() => console.log(i), 100);
}
// Output: 3, 3, 3 (semua iterasi berbagi "kotak" yang sama)
```

### Studi Kasus 2: Konfigurasi Aplikasi
Gunakan `const` untuk nilai yang tidak akan berubah.

**Contoh:**
```javascript
const APP_NAME = "CoolApp";
const MAX_USERS = 100;
console.log(`${APP_NAME} allows up to ${MAX_USERS} users.`);
```

---

## Kesimpulan

- **`const`**: Gunakan untuk nilai yang tidak berubah. Aman dan mudah dimengerti.
- **`let`**: Gunakan untuk nilai yang bisa berubah. Ideal untuk perulangan atau kondisi.
- **`var`**: Hindari jika memungkinkan. Gunakan hanya untuk kompatibilitas kode lama.

> **Tips Penting**: Jika ragu, mulai dengan `const`. Jika ternyata nilai perlu berubah, ubah ke `let`. Dengan begitu, kamu akan terhindar dari bug yang sulit dilacak.

Sudah paham perbedaannya? Mulai sekarang, buat kode JavaScript-mu lebih aman dan mudah dibaca dengan memilih deklarasi variabel yang tepat!

15:T93e,
# Markdown and MDX Guide

This guide demonstrates the various features available in Markdown and MDX.

## Code Blocks

### Basic Code Block (3 backticks)

```javascript
const greeting = "Hello World";
console.log(greeting);

// Object example
const user = {
  name: "John Doe",
  age: 30,
  isAdmin: true
};
```

### Code Block with Title and Line Numbers

```bash title="install dependencies" showLineNumbers
# Install dependencies
npm install next@latest
npm install @tailwindcss/typography
npm install gray-matter
```

### Code Block with Line Highlighting

```python {1,3-4}
def example():
    # This line won't be highlighted
    # These lines will be highlighted
    print("Hello World")
```

## Word highlighted Example

```json word="name" word="project" /version/
{
  "name": "my-project",
  "version": "1.0.0",
  "dependencies": {
    "next": "latest",
    "react": "latest"
  }
}
``` 

## Tables

| Feature | Description | Status |
|---------|------------|--------|
| Tables | Basic table support | ✅ |
| Lists | Ordered and unordered lists | ✅ |
| Code Blocks | Syntax highlighting | ✅ |
| Images | Image embedding | ✅ |

## Text Formatting

### Basic Formatting

This is **bold text**, and this is *italic text*.
You can also use ***bold and italic*** together.

### Blockquotes

> This is a blockquote. You can use it to emphasize important information or quotes.
>
> You can have multiple paragraphs in a blockquote.

### Lists

#### Unordered List
- First item
  - Nested item
  - Another nested item
- Second item
- Third item

#### Ordered List
1. First step
   1. Sub-step one
   2. Sub-step two
2. Second step
3. Third step

## Links and Images

### Links
[Visit OpenAI](https://openai.com)
[Internal Link to Blog](/blog)

### Images
![Screenshot](/portfolio/images/image_2024-11-18_15-10-17.png)

## Advanced Features

### Task Lists

- [x] Write the introduction
- [x] Add code examples
- [ ] Review content
- [ ] Publish post

### Custom Components

```json
{
  "name": "my-project",
  "version": "1.0.0",
  "dependencies": {
    "next": "latest",
    "react": "latest"
  }
}
```

### One backtick
`this text is use one bactick`

## Conclusion

This post demonstrates the main features available in Markdown and MDX. You can use these elements to create rich, well-formatted content for your blog.

---

*Last updated: March 25, 2024*16:T76a,
# Useful Bash Scripts for DevOps

Here are some useful Bash scripts that I frequently use in my daily DevOps tasks.

## 1. System Resource Monitor

This script monitors CPU, Memory, and Disk usage: 

```bash
#!/bin/bash
echo System Resource Monitor
echo "CPU Usage:"
top -bn1 | grep "Cpu(s)" | sed "s/.,[0−9.]∗[0−9.]∗% id./\1/" | awk '{print 100 - $1}'%
echo "Memory Usage:"
free | grep Mem | awk '{print $3/$2 100.0}'%
echo "Disk Usage:"
df -h | awk '$NF=="/"{print $5}'
```

## Test Python Code

```python
print("hello-world")
```

## Plain Text Example

```text
test
```

## 2. Backup Script

This script creates a backup of a specified directory:

```bash
#!/bin/bash
# Backup Script
SOURCE="/path/to/source"
DESTINATION="/path/to/backup"
TIMESTAMP=$(date +"%Y%m%d%H%M")
BACKUP_FILE="$DESTINATION/backup-$TIMESTAMP.tar.gz"

tar -czf $BACKUP_FILE $SOURCE
echo "Backup created at $BACKUP_FILE"
```

## 3. Log Cleanup

This script cleans up old log files:

```bash
#!/bin/bash
# Log Cleanup Script
find /var/log -type f -name "*.log" -mtime +30 -exec rm {} \;
echo "Old log files deleted."
```

## 4. User Management

This script adds a new user and sets a password:

```bash
#!/bin/bash
# User Management Script
read -p "Enter username: " USERNAME
sudo adduser $USERNAME
echo "User $USERNAME added."
```

## 5. Network Status Check

This script checks the network status:

```bash
#!/bin/bash
# Network Status Check Script
ping -c 4 google.com
```

## Features of This Document

- **Code Blocks**: `Shown above for various scripts.`
- **Lists**: 
  - Item 1
  - Item 2
  - Item 3
- **Bold Text**: Important commands are highlighted.
- *Italic Text*: Notes and comments are italicized.
- **Blockquotes**: 
  > This is a blockquote for important notes.

## Conclusion

These scripts can help automate various tasks in your DevOps workflow. Feel free to modify them according to your needs!7:["$","$Lf",null,{"content":{"compiledSource":"$10","frontmatter":{},"scope":{}},"frontmatter":{"slug":"useful-bash-scripts","content":"$11","title":"Useful Bash Scripts for DevOps","date":"2024-03-20","updated":"2024-03-21","tags":["bash","devops","linux","automation"],"excerpt":"Collection of useful Bash scripts for daily DevOps tasks","wordCount":290,"readingTime":2,"rawContent":"$12"},"allPosts":[{"slug":"automated-finance-tracker-with-ai","content":"$13","title":"Bikin Finance Tracker Otomatis Pakai AI? Gampang Banget! 🤖💰 Buatnya Pakai n8n, Google Gemini, dan Notion","date":"2025-05-27","tags":["automation","finance","n8n","notion","ai","telegram","nocode","lowcode","gemini"],"draft":false,"summary":"Capek nyatet pengeluaran manual? Coba bikin finance tracker otomatis pakai n8n, Notion, dan AI. Tinggal chat ke bot Telegram, semua data dirangkum AI dan langsung tercatat rapi di Notion! ✨","wordCount":483,"readingTime":3},{"slug":"javascript-variables","content":"$14","title":"Var, Let, dan Const: Rahasia Penting yang Wajib Dipahami Developer!","date":"2024-12-13","tags":["javascript","programming","coding-tips"],"excerpt":"Pelajari perbedaan antara var, let, dan const di JavaScript serta kenapa kamu harus mulai menggunakan `let` dan `const` untuk kode yang lebih aman dan modern!","wordCount":777,"readingTime":4},{"slug":"example-post","content":"\n# Menggunakan Gambar di MDX\n\n## Cara Pertama: Menggunakan Markdown Standard\n\nBerikut adalah contoh penggunaan gambar menggunakan syntax markdown standard:\n\n![Screenshot](/portfolio/images/image_2024-11-18_15-10-17.png)\n\n\n  ","title":"Menggunakan Gambar di Blog Post","date":"2024-11-24","tags":["nextjs","mdx","images"],"excerpt":"Panduan menggunakan gambar dalam blog post menggunakan MDX","thumbnail":"/portfolio/images/image_2024-11-18_15-10-17.png","wordCount":21,"readingTime":1},{"slug":"test","content":"\n# Test Code Blocks\n\n## Basic Code Block\n\n```javascript\nconst greeting = \"Hello World\";\nconsole.log(greeting);\n\n// Object example\nconst user = {\n  name: \"John\",\n  age: 30\n};\n```\n\n## Code Block with Title\n\n```javascript title=\"example.js\"\nfunction sayHello() {\n  return \"Hello!\";\n}\n```\n\n## Code Block with Line Highlighting\n\n```python {1,3-4}\ndef example():\n    # This line won't be highlighted\n    # These lines will be highlighted\n    print(\"Hello World\")\n```\n\n## Code Block without Line Numbers\n\n```bash\nnpm install\nnpm run dev\n```\n\n## Package.json Example\n\n```json title=\"package.json\"\n{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"next\": \"latest\",\n    \"react\": \"latest\"\n  }\n}\n``` \n","title":"Test Code Blocks","date":"2024-03-26","tags":["code","test"],"excerpt":"Just a code test","wordCount":99,"readingTime":1},{"slug":"markdown-guide","content":"$15","title":"Complete Markdown and MDX Guide","date":"2024-03-25","tags":["markdown","mdx","guide","tutorial"],"excerpt":"A comprehensive guide to using Markdown and MDX features including code blocks, tables, and more","wordCount":355,"readingTime":2},{"slug":"useful-bash-scripts","content":"$16","title":"Useful Bash Scripts for DevOps","date":"2024-03-20","updated":"2024-03-21","tags":"$7:props:frontmatter:tags","excerpt":"Collection of useful Bash scripts for daily DevOps tasks","wordCount":290,"readingTime":2}]}]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Febryan Portfolio"}],["$","meta","2",{"name":"description","content":"Personal portfolio and blog by Febryan"}],["$","meta","3",{"name":"author","content":"Febryan"}],["$","meta","4",{"name":"keywords","content":"portfolio,blog,web development,javascript,react,next.js"}],["$","meta","5",{"name":"robots","content":"index, follow"}],["$","meta","6",{"property":"og:title","content":"Febryan Portfolio"}],["$","meta","7",{"property":"og:description","content":"Personal portfolio and blog by Febryan"}],["$","meta","8",{"property":"og:url","content":"https://pepryan.github.io/portfolio/"}],["$","meta","9",{"property":"og:site_name","content":"Febryan Portfolio"}],["$","meta","10",{"property":"og:locale","content":"en_US"}],["$","meta","11",{"property":"og:type","content":"website"}],["$","meta","12",{"name":"twitter:card","content":"summary"}],["$","meta","13",{"name":"twitter:title","content":"Febryan Portfolio"}],["$","meta","14",{"name":"twitter:description","content":"Personal portfolio and blog by Febryan"}],["$","link","15",{"rel":"icon","href":"/portfolio/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
9:null
